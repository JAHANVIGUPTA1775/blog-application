<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
      body {
        background-color: aliceblue;
        margin: 0;
        padding: 0;
        align-items: center;
        height: 100vh;
      }
      .container {
        display: flex;
        justify-content: center;
      }

      form {
        background-color: #fff;
        padding: 18px;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        max-width: 600px;
        width: 100%;
      }

      label {
        display: block;
        font-size: 16px;
        margin: 10px 0 5px;
        color: #333;
      }

      input,
      textarea,
      select {
        width: 100%;
        margin-bottom: 20px;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 16px;
      }

      textarea {
        resize: vertical;
        height: 150px;
      }

      /* button {
        background-color: #007bff;
        color: #fff;
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        font-size: 16px;
        cursor: pointer;
        display: block;
      }

      button:hover {
        background-color: #0056b3;
      } */
      .container{
        margin: 20px;
      }
      .create-blog-button {
     
        margin:5px 0px;
        font-size: 16px;
        color: #fff;
        background-color: #007bff;
        border: none;
        border-radius: 5px;
        text-decoration: none;
        text-align: center;
        padding: 10px 20px;
      }
      .create-blog-button:hover {
        color: white;
        background-color: #0056b3; /* Darker shade for hover */
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Shadow for depth */
      }
      .back-to-block-list{
        display: flex;
        justify-content: flex-end;
        text-decoration-line: none;
      }
    </style>
  </head>
  <body>
    <%- include('./partials/header')%>
    <div class="container">
      <form action="/blogs" id="createBlogForm" method="POST" enctype="multipart/form-data">
        <h1>Create Blog</h1>
        <label for="title">Title</label>
        <input type="text" id="title" name="title" required />

        <label for="category">Category</label>
        <select name="category" id="category" required>
          <%   categories.forEach(category=>{ %>
            <option value = <%= category.category_name %>><%= category.category_name %></option>
          <%  }) %>
        </select>

        <label for="image">Image</label>
        <input type="file" id="image" name="image" required/>

        <label for="post">Post</label>
        <textarea id="post" name="post" required></textarea>

        <button type="submit" class="create-blog-button">Submit</button>
        <a href="/blogs" class="back-to-block-list">Back to Blog List</a>
      </form>
    </div>
    <%- include('./partials/footer') %>
  </body>

  <script src="https://cdn.ckeditor.com/4.16.2/standard/ckeditor.js"></script>
  <script>
    CKEDITOR.replace('post');
   
    document.getElementById("createBlogForm").addEventListener("submit", async (event)=>{
      event.preventDefault();

      // const title=document.getElementById("title").value;
    
      const post = CKEDITOR.instances['post'].getData(); 
      const title= document.getElementById("title").value;
      const category= document.getElementById("category").value;
      const image= document.getElementById("image").files[0];

      // console.log(image);
      if(title.length<3){
        Swal.fire({
          text: "Title should be at least 3 characters long",
          icon:"warning"
        })
        return;
      }
      if(post.length<20){
        Swal.fire({
          text: "Content should be at least 20 characters long",
          icon:"warning"
        })
        return;
      }


      const formdata=new FormData();
      formdata.append("title", title);
      formdata.append("post", post);
      formdata.append("image", image);
      formdata.append("category", category);
      try{
        const response= await fetch("/blogs", {
          method:"POST",
          body: formdata
        })

        const result= await response.json();

        if(result.success){
          Swal.fire({
            text: "Blog added successfully",
            icon: 'success',
            confirmButtonText: 'Okay'
          }) .then((result) => {
              window.location.href="/blogs";
          });
        }else{
          Swal.fire({
            text: result.message,
            icon: 'error'
          })
        }
      }catch (error) {
          
          Swal.fire({
              
              text:"Something went wrong!",
              icon: 'error'
            })
        }
    
    })
</script>
</html>
